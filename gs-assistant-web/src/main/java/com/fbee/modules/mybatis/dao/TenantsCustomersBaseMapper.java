package com.fbee.modules.mybatis.dao;

import java.util.List;
import java.util.Map;
import com.fbee.modules.core.persistence.annotation.MyBatisDao;
import com.fbee.modules.mybatis.entity.TenantsCustomersBaseEntity;
import com.fbee.modules.mybatis.model.TenantsCustomersBase;
import com.fbee.modules.mybatis.model.TenantsCustomersBaseExample;
import org.apache.ibatis.annotations.Param;

@MyBatisDao
public interface TenantsCustomersBaseMapper {
	
	  /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int countByExample(TenantsCustomersBaseExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int deleteByExample(TenantsCustomersBaseExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int deleteByPrimaryKey(Integer customerId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int insert(TenantsCustomersBase record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int insertSelective(TenantsCustomersBase record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	List<TenantsCustomersBase> selectByExample(TenantsCustomersBaseExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	TenantsCustomersBase selectByPrimaryKey(Integer customerId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int updateByExampleSelective(@Param("record") TenantsCustomersBase record,
			@Param("example") TenantsCustomersBaseExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int updateByExample(@Param("record") TenantsCustomersBase record,
			@Param("example") TenantsCustomersBaseExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int updateByPrimaryKeySelective(TenantsCustomersBase record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tenants_customers_base
	 * @mbggenerated  Fri Feb 24 17:13:06 CST 2017
	 */
	int updateByPrimaryKey(TenantsCustomersBase record);

	/** 
	   	 * 返回数量
	     * @param map
	     * @return
	     */
	    Integer getCustomerQueryCount(Map<String, Object> map);
	    
	    /**
	     * 返回用户集合
	     * @param map
	     * @return
	     */
	    List<TenantsCustomersBase> getCustomerQueryList(Map<String, Object> map);
	    
	    /**
	     * 返回客户对应的订单数
	     * @param map
	     * @return
	     */
	    Integer getOrdersCount(Map<String, Object> map);
	    
	    /**
	     * 返回单个用户的详细信�?
	     * @param map
	     * @return
	     */
	    TenantsCustomersBase getCustomer(Map<String, Object> map);
	   
	    /**
	     * 新增用户
	     * @param map
	     * @return
	     */
	    int saveCustomer(TenantsCustomersBaseEntity tenantsCustomersBaseEntity);
	    
	    /**
	     * 修改用户
	     * @param tenantsCustomersBaseEntity
	     * @return
	     */
	    int updateCustomer(TenantsCustomersBaseEntity tenantsCustomersBaseEntity);



	    /**
	     * 根据手机号以及租户id获取租户客户信息
	     * @param map
	     * @return
	     */
	    Integer getCustomerByCustomerMobile(Map<String, Object> map);
	    
    /**
     * 修改用户
     * @param tenantsCustomersBaseEntity
     * @return
     */
    int updateCustomerHomeInfo(TenantsCustomersBaseEntity tenantsCustomersBaseEntity);

}